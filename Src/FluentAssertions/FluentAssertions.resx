<?xml version="1.0" encoding="utf-8"?>

<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">

    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XmlElementAssertions_HaveInnerText_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have value {0}{reason}, but found {1}.</value>
  </data>
  <data name="XmlElementAssertions_HaveAttributeWithNamespace_AttributeIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have attribute {0} with value {1}{reason}, but found no such attribute in {2}</value>
  </data>
  <data name="XmlElementAssertions_HaveAttributeWithNamespace_AttributeHaveIncorrectValue_FailMessageFormat" xml:space="preserve">
    <value>Expected attribute {0} in {context:subject} to have value {1}{reason}, but found {2}.</value>
  </data>
  <data name="XmlElementAssertions_HaveElementWithNamespace_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have child element {0}{reason}, but no such child element was found.</value>
  </data>
  <data name="ObjectAssertions_BeDataContractSerializable_FailMessageFormat" xml:space="preserve">
    <value>Expected {0} to be serializable{reason}, but serialization failed with:</value>
  </data>
  <data name="ObjectAssertions_BeXmlSerializable_FailMessageFormat" xml:space="preserve">
    <value>Expected {0} to be serializable{reason}, but serialization failed with:</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:value} to be NaN{reason}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:value} to be NaN{reason}.</value>
  </data>
  <data name="NumericAssertionsOfDouble_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:value} to be NaN{reason}.</value>
  </data>
  <data name="NumericAssertionsOfFloat_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:value} to be NaN{reason}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to be NaN{reason}, but found {0}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to be NaN{reason}, but found {0}.</value>
  </data>
  <data name="NumericAssertionsOfDouble_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to be NaN{reason}, but found {0}.</value>
  </data>
  <data name="NumericAssertionsOfFloat_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to be NaN{reason}, but found {0}.</value>
  </data>
  <data name="NumericAssertions_FailIfDifferenceWithinPrecision_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to not approximate {1} +/- {2}{reason}, but {0} only differed by {3}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDecimal_NotBeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to not approximate {0} +/- {1}{reason}, but it was {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_NotBeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to not approximate {0} +/- {1}{reason}, but it was {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_NotBeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to not approximate {0} +/- {1}{reason}, but it was {2}.</value>
  </data>
  <data name="NumericAssertionsOfT_FailIfDifferenceOutsidePrecision_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {1} +/- {2}{reason}, but {0} differed by {3}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDecimal_BeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {0} +/- {1}{reason}, but it was {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_BeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {0} +/- {1}{reason}, but it was {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_BeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {0} +/- {1}{reason}, but it was {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDecimal_BeApproximatelyWhenValueIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {0} +/- {1}{reason}, but it was &lt;null&gt;.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_BeApproximatelyWhenValueIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {0} +/- {1}{reason}, but it was &lt;null&gt;.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_BeApproximatelyWhenValueIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to approximate {0} +/- {1}{reason}, but it was &lt;null&gt;.</value>
  </data>
  <data name="NumericAssertions_FailIfValueInsideBounds_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:value} to be within {0} from {1}{reason}, but found {2}.</value>
  </data>
  <data name="NumericAssertions_FailIfValueOutsideBounds_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:value} to be within {0} from {1}{reason}, but found {2}.</value>
  </data>
  <data name="ExceptionAssertions_WithParameterName_FailMessageFormat" xml:space="preserve">
    <value>Expected exception with parameter name {0}{reason}, but found {1}.</value>
  </data>
  <data name="OccurrenceConstraint_ExceptionMessage" xml:space="preserve">
    <value>Expected count cannot be negative.</value>
  </data>
  <data name="EventRaisingExtensions_WithSender_EveryEvent_FailMessageFormat" xml:space="preserve">
    <value>Expected event from sender {0}, but event {1} does not have any parameters</value>
  </data>
  <data name="EventRaisingExtensions_WithSender_Senders_FailMessageFormat" xml:space="preserve">
    <value>Expected sender {0}, but found {1}.</value>
  </data>
  <data name="EventRaisingExtensions_WithArgs_FailMessageFormat" xml:space="preserve">
    <value>Expected at least one event with some argument of type &lt;{0}&gt; that matches {1}, but found none.</value>
  </data>
  <data name="EventRaisingExtensions_WithArgs_EventArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Expected the event to have at least {0} parameters of type {1}, but only found {2}.</value>
  </data>
  <data name="EventRaisingExtensions_WithArgs_FoundMatchingEvent_FailMessageFormat" xml:space="preserve">
    <value>Expected at least one event with some arguments of type &lt;{0}&gt; that pairwise match {1}, but found none.</value>
  </data>
  <data name="XElementAssertions_HaveValue_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected the element to have value {0}{reason}, but {context:member} is &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveValue_SubjectIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} '{0}' to have value {1}{reason}, but found {2}.</value>
  </data>
  <data name="XElementAssertions_HaveAttribute_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected attribute {0} in element to have value {1}{reason}, but {context:member} is &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveAttribute_AttributeIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have attribute {0} with value {1}{reason}, but found no such attribute in {2}</value>
  </data>
  <data name="XElementAssertions_HaveAttribute_AttributeIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Expected attribute {0} in {context:subject} to have value {1}{reason}, but found {2}.</value>
  </data>
  <data name="XElementAssertions_HaveElement_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected the element to have child element {0}{reason}, but {context:member} is &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveElement_ElementIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have child element {0}{reason}, but no such child element was found.</value>
  </data>
  <data name="XElementAssertions_HaveElement_GuardExpectedValue_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the element has an element count if the element name is &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveElementForEnumerable_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have an element with count of {0}{reason}, but the element itself is &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveElementForEnumerable_OccurrenceConstraint_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have an element {0} {expectedOccurrence}{reason}, but found it {1}.</value>
  </data>
  <data name="XElementAssertions_HaveElementForEnumerable_GuardExpectedValue_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the element has an element if the expected name is &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_NotBe_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:subject} to be {0}{reason}.</value>
  </data>
  <data name="XElementAssertions_Be_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to be {0}{reason}, but found {1}.</value>
  </data>
  <data name="NumericAssertionsOfFloat_BeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Cannot determine approximation of a float to NaN</value>
  </data>
  <data name="NumericAssertionsOfDouble_BeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Cannot determine approximation of a double to NaN</value>
  </data>
  <data name="NumericAssertionsOfFloat_NotBeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Cannot determine approximation of a float to NaN</value>
  </data>
  <data name="NumericAssertionsOfDouble_NotBeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Cannot determine approximation of a double to NaN</value>
  </data>
  <data name="AndWhichConstraint_SingleOrDefault_ExceptionMessageFormat" xml:space="preserve">
    <value>More than one object found.  FluentAssertions cannot determine which object is meant.  Found objects:{0}{1}</value>
  </data>
  <data name="XDocumentAssertions_Be_SubjectNotEqualsExpected_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to be {0}{reason}, but found {1}.</value>
  </data>
  <data name="XDocumentAssertions_NotBe_SubjectEqualsUneExpected_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context:subject} to be {0}{reason}.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_GuardThrowIfArgumentIsNull_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has a root element if the expected name is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_InvalidOperationException_ExceptionMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has a root element if the document itself is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_GuardThrowIfArgumentIsNull_ForElement_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has a root element if the expected name is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_RootIsNullAndNameIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have root element {0}{reason}, but found {1}.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_GuardThrowIfArgumentIsNull_StringExpected_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has an element if the expected name is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_GuardThrowIfArgumentIsNull_OccurrenceConstraint_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has an element if the expected name is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_GuardThrowIfArgumentIsNull_XName_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has an element if the expected name is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_InvalidOperationException_XName_ExceptionMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has an element if the document itself is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_SubjectRootIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have root element with child {0}{reason}, but it has no root element.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_ElementIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have root element with child {0}{reason}, but no such child element was found.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_GuardThrowIfArgumentIsNull_GuardMessageFormat" xml:space="preserve">
    <value>Cannot assert the document has an element count if the element name is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Cannot assert the count if the document itself is &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_RootIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have root element containing a child {0}{reason}, but it has no root element.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_OccurrenceConstraint_FailMessageFormat" xml:space="preserve">
    <value>Expected {context:subject} to have a root element containing a child {0} {expectedOccurrence}{reason}, but found it {1}.</value>
  </data>
  <data name="XAttributeAssertions_Be_SubjectNotEqualsExpected_FailMessageFormat" xml:space="preserve">
    <value>Expected {context} to be {0}{reason}, but found {1}.</value>
  </data>
  <data name="XAttributeAssertions_NotBe_SubjectEqualsUneExpected_FailMessageFormat" xml:space="preserve">
    <value>Did not expect {context} to be {0}{reason}.</value>
  </data>
  <data name="XAttributeAssertions_HaveValue_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Expected the attribute to have value {0}{reason}, but {context:member} is &lt;null&gt;.</value>
  </data>
  <data name="XAttributeAssertions_HaveValue_SubjectIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Expected {context} "{0}" to have value {1}{reason}, but found {2}.</value>
  </data>
</root>
