<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XmlElementAssertions_HaveInnerText_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь значение {0}{reason}, но было найдено {1}.</value>
  </data>
  <data name="XmlElementAssertions_HaveAttributeWithNamespace_AttributeIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь атрибут {0} со значением {1}{reason}, но такой атрибут в {2} не был найден</value>
  </data>
  <data name="XmlElementAssertions_HaveAttributeWithNamespace_AttributeHaveIncorrectValue_FailMessageFormat" xml:space="preserve">
    <value>Ожидаемый атрибут {0} в {context:subject} должен иметь значение {1}{reason}, но было найдено {2}.</value>
  </data>
  <data name="XmlElementAssertions_HaveElementWithNamespace_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь дочерний элемент {0}{reason}, но такой дочерний элемент не был найден.</value>
  </data>
  <data name="ObjectAssertions_BeDataContractSerializable_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {0} будет сериализован{reason}, но сериализация завершилась с ошибкой:</value>
  </data>
  <data name="ObjectAssertions_BeXmlSerializable_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {0} будет сериализован{reason}, но сериализация завершилась с ошибкой:</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не будет NaN{reason}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не будет NaN{reason}.</value>
  </data>
  <data name="NumericAssertionsOfDouble_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не будет NaN{reason}.</value>
  </data>
  <data name="NumericAssertionsOfFloat_NotBeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не будет NaN{reason}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет NaN{reason}, но было найдено {0}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет NaN{reason}, но было найдено {0}.</value>
  </data>
  <data name="NumericAssertionsOfDouble_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет NaN{reason}, но было найдено {0}.</value>
  </data>
  <data name="NumericAssertionsOfFloat_BeNaN_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет NaN{reason}, но было найдено {0}.</value>
  </data>
  <data name="NumericAssertions_FailIfDifferenceWithinPrecision_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не приближен к {1} +/- {2}{reason}, но {0} отличается только от {3}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDecimal_NotBeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не приближен к {0} +/- {1}{reason}, но имеет значение {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_NotBeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не приближен к {0} +/- {1}{reason}, но имеет значение {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_NotBeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не приближен к {0} +/- {1}{reason}, но имеет значение {2}.</value>
  </data>
  <data name="NumericAssertionsOfT_FailIfDifferenceOutsidePrecision_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {1} +/- {2}{reason}, но {0} отличается на {3}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDecimal_BeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {0} +/- {1}{reason}, но имеет значение {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_BeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {0} +/- {1}{reason}, но имеет значение {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_BeApproximately_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {0} +/- {1}{reason}, но имеет значение {2}.</value>
  </data>
  <data name="NullableNumericAssertionsOfDecimal_BeApproximatelyWhenValueIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {0} +/- {1}{reason}, но имеет значение &lt;null&gt;.</value>
  </data>
  <data name="NullableNumericAssertionsOfDouble_BeApproximatelyWhenValueIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {0} +/- {1}{reason}, но имеет значение &lt;null&gt;.</value>
  </data>
  <data name="NullableNumericAssertionsOfFloat_BeApproximatelyWhenValueIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} будет приближен к {0} +/- {1}{reason}, но имеет значение &lt;null&gt;.</value>
  </data>
  <data name="NumericAssertions_FailIfValueInsideBounds_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} не находится в пределах {0} до {1}{reason}, но было найдено {2}.</value>
  </data>
  <data name="NumericAssertions_FailIfValueOutsideBounds_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:value} находится в пределах {0} до {1}{reason}, но было найдено {2}.</value>
  </data>
  <data name="ExceptionAssertions_WithParameterName_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что исключение с именем параметра {0}{reason}, но было найдено {1}.</value>
  </data>
  <data name="OccurrenceConstraint_ExceptionMessage" xml:space="preserve">
    <value>Ожидалось, что значение не может быть отрицательным.</value>
  </data>
  <data name="EventRaisingExtensions_WithSender_EveryEvent_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что событие от отправителя будет {0}, но событие {1} не имеет параметров</value>
  </data>
  <data name="EventRaisingExtensions_WithSender_Senders_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что отправитель будет {0}, но был найден {1}.</value>
  </data>
  <data name="EventRaisingExtensions_WithArgs_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что по крайней мере одно событие с аргументом типа &lt;{0}&gt;, который соответствует {1}, но не было найдено.</value>
  </data>
  <data name="EventRaisingExtensions_WithArgs_EventArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Ожидалось, что событие будет иметь как минимум {0} параметров типа {1}, но было найдено только {2}.</value>
  </data>
  <data name="EventRaisingExtensions_WithArgs_FoundMatchingEvent_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что по крайней мере одно событие с некоторыми аргументами типа &lt;{0}&gt;, попарно соответствующими {1}, но не было найдено ни одного.</value>
  </data>
  <data name="XElementAssertions_HaveValue_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что элемент имеет значение {0} {reason}, но {context: member} имеет значение &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveValue_SubjectIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} '{0}' будет иметь значение {1}{reason}, но было найдено {2}.</value>
  </data>
  <data name="XElementAssertions_HaveAttribute_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидаемый атрибут {0} в элементе должен иметь значение {1}{reason}, но {context:member} имеет значение &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveAttribute_AttributeIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} имеет атрибут {0} со значением {1}{reason}, но такой атрибут в {2} не был найден.</value>
  </data>
  <data name="XElementAssertions_HaveAttribute_AttributeIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидаемый атрибут {0} в {context:subject} должен иметь значение {1}{reason}, но было найдено {2}.</value>
  </data>
  <data name="XElementAssertions_HaveElement_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что элемент имеет дочерний элемент {0}{reason}, но {context:member} имеет значение &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveElement_ElementIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь дочерний элемент {0}{reason}, но такой дочерний элемент не был найден.</value>
  </data>
  <data name="XElementAssertions_HaveElement_GuardExpectedValue_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что элемент имеет количество элементов, если имя элемента равно &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveElementForEnumerable_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} имеет элемент с количеством {0}{reason}, но элемент имеет значение &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_HaveElementForEnumerable_OccurrenceConstraint_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} имеет элемент {0} {expectedOccurrence}{reason}, но было найдено {1}.</value>
  </data>
  <data name="XElementAssertions_HaveElementForEnumerable_GuardExpectedValue_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что элемент имеет элемент, если ожидаемое имя равно &lt;null&gt;.</value>
  </data>
  <data name="XElementAssertions_NotBe_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} не будет {0}{reason}.</value>
  </data>
  <data name="XElementAssertions_Be_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет {0}{reason}, но было найдено {1}.</value>
  </data>
  <data name="NumericAssertionsOfFloat_BeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Невозможно определить приближение числа с плавающей запятой к NaN</value>
  </data>
  <data name="NumericAssertionsOfDouble_BeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Невозможно определить приближение double к NaN</value>
  </data>
  <data name="NumericAssertionsOfFloat_NotBeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Невозможно определить приближение числа с плавающей запятой к NaN</value>
  </data>
  <data name="NumericAssertionsOfDouble_NotBeApproximately_ArgumentException_ExceptionMessageFormat" xml:space="preserve">
    <value>Невозможно определить приближение double к NaN</value>
  </data>
  <data name="AndWhichConstraint_SingleOrDefault_ExceptionMessageFormat" xml:space="preserve">
    <value>Найдено более одного объекта. FluentAssertions не может определить, какой объект имеется в виду. Найдены объекты:{0}{1}</value>
  </data>
  <data name="XDocumentAssertions_Be_SubjectNotEqualsExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет {0}{reason}, но было найдено {1}.</value>
  </data>
  <data name="XDocumentAssertions_NotBe_SubjectEqualsUneExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} не будет {0}{reason}.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_GuardThrowIfArgumentIsNull_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ имеет корневой элемент, если ожидаемое имя &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_InvalidOperationException_ExceptionMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ имеет корневой элемент, если сам документ &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_GuardThrowIfArgumentIsNull_ForElement_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ имеет корневой элемент, если ожидаемое имя &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveRoot_RootIsNullAndNameIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь корневой элемент {0}{reason}, но было найдено {1}.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_GuardThrowIfArgumentIsNull_StringExpected_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ содержит элемент, если ожидаемое имя &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_GuardThrowIfArgumentIsNull_OccurrenceConstraint_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ содержит элемент, если ожидаемое имя &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_GuardThrowIfArgumentIsNull_XName_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ содержит элемент, если ожидаемое имя &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_InvalidOperationException_XName_ExceptionMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ имеет элемент, если сам документ &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_SubjectRootIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} имеет корневой элемент с дочерним элементом {0}{reason}, но у него нет корневого элемента.</value>
  </data>
  <data name="XDocumentAssertions_HaveElement_ElementIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} имеет корневой элемент с дочерним элементом {0}{reason}, но такой дочерний элемент не был найден.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_GuardThrowIfArgumentIsNull_GuardMessageFormat" xml:space="preserve">
    <value>Невозможно утверждать, что документ имеет количество элементов, если имя элемента &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Невозможно утвердить счетчик, если сам документ &lt;null&gt;.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_RootIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь корневой элемент, содержащий дочерний элемент {0}{reason}, но у него нет корневого элемента.</value>
  </data>
  <data name="XDocumentAssertions_HaveElementForEnumerableOfXElement_OccurrenceConstraint_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context:subject} будет иметь корневой элемент, содержащий дочерний элемент {0} {expectedOccurrence}{reason}, но было найдено {1}.</value>
  </data>
  <data name="XAttributeAssertions_Be_SubjectNotEqualsExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context} будет иметь значение {0}{reason}, но было найдено {1}.</value>
  </data>
  <data name="XAttributeAssertions_NotBe_SubjectEqualsUneExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context} не будет иметь значение {0}{reason}.</value>
  </data>
  <data name="XAttributeAssertions_HaveValue_SubjectIsNull_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что атрибут будет иметь значение {0}{reason}, но {context:member} имеет значение &lt;null&gt;.</value>
  </data>
  <data name="XAttributeAssertions_HaveValue_SubjectIsNotEqualExpected_FailMessageFormat" xml:space="preserve">
    <value>Ожидалось, что {context} "{0}" будет иметь значение {1}{reason}, но было найдено {2}.</value>
  </data>
</root>
